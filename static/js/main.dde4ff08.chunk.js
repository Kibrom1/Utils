(this["webpackJsonputils-app"]=this["webpackJsonputils-app"]||[]).push([[0],{10:function(e,n,t){},11:function(e,n,t){"use strict";t.r(n);var i=t(1),s=t.n(i),a=t(3),o=t.n(a),r=t(0);var c=()=>Object(r.jsxs)("div",{className:"header",children:[Object(r.jsx)("h1",{children:"\ud83d\udee0\ufe0f Developer Utils Hub"}),Object(r.jsx)("p",{children:"Your one-stop collection of essential development tools, cheat sheets, and quick references"})]});var l=e=>{let{value:n,onChange:t}=e;return Object(r.jsxs)("div",{className:"search-bar",children:[Object(r.jsx)("input",{type:"text",className:"search-input",placeholder:"Search utilities...",value:n,onChange:e=>t(e.target.value)}),Object(r.jsx)("span",{className:"search-icon",children:"\ud83d\udd0d"})]})};const d=[{label:"All",value:"all"},{label:"Git",value:"git"},{label:"Docker",value:"docker"},{label:"Python",value:"python"},{label:"JavaScript",value:"javascript"},{label:"CSS",value:"css"},{label:"Linux",value:"linux"},{label:"DevOps",value:"devops"}];var m=e=>{let{category:n,setCategory:t}=e;return Object(r.jsx)("div",{className:"categories",children:d.map(e=>Object(r.jsx)("button",{className:"category-btn".concat(n===e.value?" active":""),onClick:()=>t(e.value),children:e.label},e.value))})};var p=e=>{let{util:n,onSelect:t}=e;return Object(r.jsxs)("div",{className:"util-card ".concat(n.category),onClick:()=>t(n.id),"data-category":n.category,"data-util":n.id,children:[Object(r.jsx)("div",{className:"util-icon",children:n.icon}),Object(r.jsx)("h3",{children:n.title}),Object(r.jsx)("p",{children:n.description}),Object(r.jsx)("ul",{className:"util-features",children:n.features.map((e,n)=>Object(r.jsx)("li",{children:e},n))}),Object(r.jsx)("div",{className:"util-tags",children:n.tags.map((e,n)=>Object(r.jsx)("span",{className:"tag",children:e},n))})]})};var u=e=>{let{utils:n,search:t,category:i,onSelect:s}=e;const a=n.filter(e=>{const n="all"===i||e.category.split(" ").includes(i),s=t.toLowerCase(),a=e.title.toLowerCase().includes(s)||e.description.toLowerCase().includes(s)||e.tags.join(" ").toLowerCase().includes(s);return n&&a});return Object(r.jsx)("div",{className:"utils-grid",children:a.map(e=>Object(r.jsx)(p,{util:e,onSelect:s},e.id))})};var g=e=>{let{utilId:n,pageData:t,onBack:i}=e;return t?Object(r.jsxs)("div",{className:"page-content active",children:[Object(r.jsx)("button",{className:"back-btn",onClick:i,children:"\u2190 Back to Utils"}),Object(r.jsxs)("h1",{children:[t.icon," ",t.title]}),t.sections.map((e,n)=>Object(r.jsxs)("div",{className:"command-section",children:[Object(r.jsx)("h4",{children:e.heading}),Object(r.jsx)("pre",{children:Object(r.jsx)("code",{children:e.code})})]},n))]}):null};var h=()=>Object(r.jsxs)("div",{className:"footer",children:[Object(r.jsx)("p",{children:"\ud83d\udcbb Developer Utils Hub - Your productivity toolkit"}),Object(r.jsx)("p",{children:"Built with \u2764\ufe0f for developers, by developers"})]});const f=[{id:"git-commands",category:"git",icon:"\ud83d\udd00",title:"Git Commands Cheat Sheet",description:"Complete reference for Git version control commands, from basic to advanced operations.",features:["Branch management","Merge & rebase workflows","Remote operations","Troubleshooting guide"],tags:["Git","Version Control","CLI"]},{id:"docker-commands",category:"docker",icon:"\ud83d\udc33",title:"Docker Reference Guide",description:"Essential Docker commands for containerization, image management, and orchestration.",features:["Container lifecycle","Image operations","Docker Compose","Networking & volumes"],tags:["Docker","Containers","DevOps"]},{id:"python-snippets",category:"python",icon:"\ud83d\udc0d",title:"Python Code Snippets",description:"Useful Python code snippets, one-liners, and common patterns for everyday development.",features:["Data structures","File operations","List comprehensions","Error handling"],tags:["Python","Snippets","Quick Reference"]},{id:"js-utilities",category:"javascript",icon:"\u26a1",title:"JavaScript Utilities",description:"Modern JavaScript utility functions, array methods, and ES6+ features reference.",features:["ES6+ features","Array methods","Async/await patterns","DOM manipulation"],tags:["JavaScript","ES6+","Frontend"]},{id:"css-tricks",category:"css",icon:"\ud83c\udfa8",title:"CSS Tricks & Snippets",description:"CSS tricks, flexbox guides, grid layouts, and modern CSS features for better styling.",features:["Flexbox & Grid","Animations","Responsive design","Modern CSS features"],tags:["CSS","Styling","Frontend"]},{id:"linux-commands",category:"linux",icon:"\ud83d\udc27",title:"Linux Commands Guide",description:"Essential Linux/Unix commands for file operations, system administration, and shell scripting.",features:["File operations","Process management","Network commands","Shell scripting"],tags:["Linux","Terminal","System Admin"]},{id:"regex-patterns",category:"javascript python",icon:"\ud83d\udd0d",title:"Regex Patterns Library",description:"Common regular expression patterns for validation, parsing, and text manipulation.",features:["Email validation","Phone numbers","URL patterns","Text extraction"],tags:["Regex","Validation","Text Processing"]},{id:"sql-queries",category:"devops",icon:"\ud83d\uddc3\ufe0f",title:"SQL Query Reference",description:"Common SQL queries, database operations, and optimization techniques for developers.",features:["CRUD operations","Joins & subqueries","Performance tips","Database design"],tags:["SQL","Database","Queries"]},{id:"api-testing",category:"javascript python",icon:"\ud83d\udd0c",title:"API Testing Tools",description:"Tools and techniques for API testing, debugging, and documentation with various methods.",features:["HTTP methods","Status codes","Authentication","Testing tools"],tags:["API","Testing","HTTP"]},{id:"kubernetes-guide",category:"devops",icon:"\u2638\ufe0f",title:"Kubernetes Quick Guide",description:"Kubernetes commands, YAML configurations, and cluster management essentials.",features:["kubectl commands","Pod management","Services & ingress","YAML configs"],tags:["Kubernetes","DevOps","Orchestration"]},{id:"vscode-shortcuts",category:"all",icon:"\u2328\ufe0f",title:"VS Code Shortcuts",description:"Essential Visual Studio Code keyboard shortcuts and productivity tips for faster development.",features:["Navigation shortcuts","Editing commands","Multi-cursor tricks","Extension tips"],tags:["VS Code","Shortcuts","Productivity"]},{id:"react-hooks",category:"javascript",icon:"\u269b\ufe0f",title:"React Hooks Guide",description:"Complete guide to React Hooks with examples, patterns, and best practices.",features:["Built-in hooks","Custom hooks","Performance tips","Common patterns"],tags:["React","Hooks","Frontend"]}],b={"git-commands":{icon:"\ud83d\udd00",title:"Git Commands Cheat Sheet",sections:[{heading:"Basic Git Commands",code:'# Initialize repository\ngit init\n\n# Clone repository\ngit clone <repository-url>\n\n# Check status\ngit status\n\n# Add files\ngit add .\ngit add <filename>\n\n# Commit changes\ngit commit -m "commit message"\n\n# Push to remote\ngit push origin main'},{heading:"Branch Management",code:"# Create and switch to new branch\ngit checkout -b <branch-name>\n\n# Switch branches\ngit checkout <branch-name>\ngit switch <branch-name>\n\n# List branches\ngit branch\ngit branch -a  # include remote branches\n\n# Delete branch\ngit branch -d <branch-name>\ngit branch -D <branch-name>  # force delete\n\n# Rename branch\ngit branch -m <new-name>"},{heading:"Remote Operations",code:"# Add remote\ngit remote add origin <url>\n\n# View remotes\ngit remote -v\n\n# Fetch from remote\ngit fetch origin\n\n# Pull changes\ngit pull origin main\n\n# Push branch\ngit push -u origin <branch-name>"},{heading:"Merge & Rebase",code:"# Merge branch\ngit merge <branch-name>\n\n# Rebase\ngit rebase <branch-name>\n\n# Interactive rebase\ngit rebase -i HEAD~3\n\n# Abort merge/rebase\ngit merge --abort\ngit rebase --abort"},{heading:"Undo Operations",code:"# Unstage files\ngit reset HEAD <file>\n\n# Undo last commit (keep changes)\ngit reset --soft HEAD~1\n\n# Undo last commit (discard changes)\ngit reset --hard HEAD~1\n\n# Revert commit\ngit revert <commit-hash>\n\n# Stash changes\ngit stash\ngit stash pop"}]},"docker-commands":{icon:"\ud83d\udc33",title:"Docker Reference Guide",sections:[{heading:"Container Operations",code:"# Run container\ndocker run -it ubuntu bash\ndocker run -d -p 8080:80 nginx\n\n# List containers\ndocker ps\ndocker ps -a  # include stopped\n\n# Stop/Start container\ndocker stop <container-id>\ndocker start <container-id>\n\n# Remove container\ndocker rm <container-id>\ndocker rm $(docker ps -aq)  # remove all"},{heading:"Image Management",code:"# List images\ndocker images\n\n# Pull image\ndocker pull ubuntu:20.04\n\n# Build image\ndocker build -t myapp .\n\n# Remove image\ndocker rmi <image-id>\n\n# Tag image\ndocker tag myapp:latest myapp:v1.0"},{heading:"Docker Compose",code:"# Start services\ndocker-compose up\ndocker-compose up -d\n\n# Stop services\ndocker-compose down\n\n# View logs\ndocker-compose logs\ndocker-compose logs -f\n\n# Build services\ndocker-compose build\n\n# Scale services\ndocker-compose up --scale web=3"},{heading:"Volumes & Networks",code:"# Create volume\ndocker volume create myvolume\n\n# List volumes\ndocker volume ls\n\n# Create network\ndocker network create mynetwork\n\n# List networks\ndocker network ls\n\n# Run with volume\ndocker run -v myvolume:/data myapp"}]},"python-snippets":{icon:"\ud83d\udc0d",title:"Python Code Snippets",sections:[{heading:"List Operations",code:"# List comprehensions\nsquares = [x**2 for x in range(10)]\nevans = [x for x in range(20) if x % 2 == 0]\n\n# Flatten nested lists\nnested = [[1, 2], [3, 4], [5, 6]]\nflattened = [item for sublist in nested for item in sublist]\n\n# Remove duplicates (preserve order)\ndef remove_duplicates(lst):\n    return list(dict.fromkeys(lst))\n\n# Find common elements\nlist1 = [1, 2, 3, 4]\nlist2 = [3, 4, 5, 6]\ncommon = list(set(list1) & set(list2))"},{heading:"Dictionary Operations",code:"# Dictionary comprehension\nsquares_dict = {x: x**2 for x in range(5)}\n\n# Merge dictionaries (Python 3.9+)\ndict1 = {'a': 1, 'b': 2}\ndict2 = {'c': 3, 'd': 4}\nmerged = dict1 | dict2\n\n# Get value with default\nvalue = my_dict.get('key', 'default_value')\n\n# Invert dictionary\ninverted = {v: k for k, v in original_dict.items()}\n\n# Sort dictionary by value\nsorted_dict = dict(sorted(my_dict.items(), key=lambda x: x[1]))"},{heading:"File Operations",code:"# Read file content\nwith open('file.txt', 'r') as f:\n    content = f.read()\n\n# Read lines into list\nwith open('file.txt', 'r') as f:\n    lines = f.readlines()\n\n# Write to file\nwith open('output.txt', 'w') as f:\n    f.write('Hello World\\n')\n\n# JSON operations\nimport json\n\n# Read JSON\nwith open('data.json', 'r') as f:\n    data = json.load(f)\n\n# Write JSON\nwith open('data.json', 'w') as f:\n    json.dump(data, f, indent=2)"},{heading:"String Operations",code:"# String formatting\nname = \"John\"\nage = 30\nformatted = f\"Name: {name}, Age: {age}\"\n\n# Split and join\nwords = text.split(' ')\njoined = '-'.join(words)\n\n# Remove whitespace\ncleaned = text.strip()\n\n# Replace text\nnew_text = text.replace('old', 'new')\n\n# Check string properties\ntext.isdigit()   # all digits\ntext.isalpha()   # all letters\ntext.startswith('prefix')\ntext.endswith('suffix')"}]},"js-utilities":{icon:"\u26a1",title:"JavaScript Utilities",sections:[{heading:"Array Methods",code:"// Map, filter, reduce\nconst numbers = [1, 2, 3, 4, 5];\nconst doubled = numbers.map(n => n * 2);\nconst evens = numbers.filter(n => n % 2 === 0);\nconst sum = numbers.reduce((acc, n) => acc + n, 0);\n\n// Find and some/every\nconst found = numbers.find(n => n > 3);\nconst hasEven = numbers.some(n => n % 2 === 0);\nconst allPositive = numbers.every(n => n > 0);\n\n// Flatten arrays\nconst nested = [[1, 2], [3, 4], [5]];\nconst flat = nested.flat();\nconst deepFlat = nested.flat(2); // depth 2"},{heading:"ES6+ Features",code:"// Destructuring\nconst [a, b, ...rest] = [1, 2, 3, 4, 5];\nconst {name, age, ...others} = person;\n\n// Spread operator\nconst newArray = [...oldArray, newItem];\nconst newObj = {...oldObj, newProp: 'value'};\n\n// Template literals\nconst message = `Hello ${name}, you are ${age} years old`;\n\n// Arrow functions\nconst add = (a, b) => a + b;\nconst square = x => x * x;\n\n// Default parameters\nconst greet = (name = 'World') => `Hello ${name}!`;"},{heading:"Async/Await",code:"// Promise creation\nconst fetchData = () => {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => resolve('Data'), 1000);\n    });\n};\n\n// Async/await\nasync function getData() {\n    try {\n        const data = await fetchData();\n        return data;\n    } catch (error) {\n        console.error('Error:', error);\n    }\n}\n\n// Promise.all for parallel requests\nconst results = await Promise.all([\n    fetch('/api/users'),\n    fetch('/api/posts'),\n    fetch('/api/comments')\n]);\n\n// Promise.allSettled for error handling\nconst outcomes = await Promise.allSettled([\n    fetchUser(),\n    fetchPosts(),\n    fetchComments()\n]);"}]},"css-tricks":{icon:"\ud83c\udfa8",title:"CSS Tricks & Snippets",sections:[{heading:"Flexbox Layouts",code:"/* Center content */\n.center {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-height: 100vh;\n}\n\n/* Responsive grid */\n.grid {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 1rem;\n}\n\n.grid-item {\n    flex: 1 1 300px; /* grow shrink basis */\n}\n\n/* Space between items */\n.navbar {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n/* Equal height columns */\n.columns {\n    display: flex;\n    align-items: stretch;\n}"},{heading:"CSS Grid",code:'/* Basic grid */\n.grid-container {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n    gap: 1rem;\n}\n\n/* Named grid lines */\n.layout {\n    display: grid;\n    grid-template-columns: [sidebar] 250px [main] 1fr;\n    grid-template-rows: [header] 60px [content] 1fr [footer] 40px;\n}\n\n/* Grid areas */\n.page-layout {\n    display: grid;\n    grid-template-areas:\n        "header header header"\n        "sidebar main main"\n        "footer footer footer";\n}\n\n.header { grid-area: header; }\n.sidebar { grid-area: sidebar; }\n.main { grid-area: main; }\n.footer { grid-area: footer; }'},{heading:"Modern CSS Features",code:"/* CSS Custom Properties */\n:root {\n    --primary-color: #007bff;\n    --secondary-color: #6c757d;\n    --font-size: 16px;\n}\n\n.button {\n    background: var(--primary-color);\n    font-size: var(--font-size);\n}\n\n/* CSS Logical Properties */\n.card {\n    margin-inline: 1rem; /* left/right in LTR */\n    padding-block: 1rem; /* top/bottom */\n    border-inline-start: 3px solid blue; /* left in LTR */\n}\n\n/* Container Queries */\n@container (min-width: 400px) {\n    .card {\n        display: grid;\n        grid-template-columns: 1fr 2fr;\n    }\n}\n\n/* Modern color functions */\n.element {\n    background: hsl(200 50% 50%);\n    color: oklch(60% 0.15 200);\n}"}]},"linux-commands":{icon:"\ud83d\udc27",title:"\ud83d\udc27 Linux Commands Guide",sections:[{heading:"File Operations",code:'# List files\nls -la          # detailed list with hidden files\nls -lh          # human readable sizes\nls -lt          # sort by modification time\n\n# Copy and move\ncp file.txt backup.txt\ncp -r dir1 dir2         # recursive copy\nmv oldname.txt newname.txt\nmv file.txt /path/to/destination/\n\n# Find files\nfind . -name "*.txt"\nfind . -type f -size +100M  # files larger than 100MB\nfind . -mtime -7            # modified in last 7 days\n\n# File permissions\nchmod 755 script.sh         # rwxr-xr-x\nchmod +x script.sh          # make executable\nchown user:group file.txt   # change ownership'},{heading:"Process Management",code:'# View processes\nps aux                      # all processes\nps aux | grep nginx        # filter processes\ntop                        # real-time process monitor\nhtop                       # enhanced process monitor\n\n# Kill processes\nkill PID                   # terminate process\nkill -9 PID               # force kill\nkillall nginx             # kill by name\npkill -f "python script"  # kill by pattern\n\n# Background jobs\ncommand &                 # run in background\njobs                      # list background jobs\nfg %1                     # bring job 1 to foreground\nbg %1                     # send job 1 to background\nnohup command &           # run immune to hangups'},{heading:"Network Commands",code:"# Network info\nip addr show              # show IP addresses\nip route show             # show routing table\nnetstat -tuln            # listening ports\nss -tuln                 # modern netstat alternative\n\n# Test connectivity\nping google.com          # test connectivity\ntraceroute google.com    # trace network path\nnslookup google.com      # DNS lookup\ndig google.com           # detailed DNS info\n\n# Download files\nwget https://example.com/file.zip\ncurl -O https://example.com/file.zip\ncurl -L -o file.zip https://short.url\nrsync -avz source/ dest/ # sync files"},{heading:"Text Processing",code:'# View file content\ncat file.txt             # display entire file\nless file.txt            # paginated view\nhead -n 20 file.txt      # first 20 lines\ntail -f /var/log/app.log # follow log file\n\n# Search and filter\ngrep "pattern" file.txt\ngrep -r "pattern" .      # recursive search\ngrep -i "pattern" file   # case insensitive\ngrep -v "pattern" file   # invert match\n\n# Text manipulation\nsed \'s/old/new/g\' file.txt        # replace text\nawk \'{print $1}\' file.txt         # print first column\nsort file.txt                     # sort lines\nuniq file.txt                     # remove duplicates\nwc -l file.txt                    # count lines'}]}};t(9);var x=()=>{const[e,n]=Object(i.useState)(""),[t,s]=Object(i.useState)("all"),[a,o]=Object(i.useState)(null);return Object(r.jsxs)("div",{className:"container",children:[Object(r.jsx)(c,{}),Object(r.jsx)(l,{value:e,onChange:n}),Object(r.jsx)(m,{category:t,setCategory:s}),a?Object(r.jsx)(g,{utilId:a,pageData:b[a],onBack:()=>o(null)}):Object(r.jsx)(u,{utils:f,search:e,category:t,onSelect:o}),Object(r.jsx)(h,{})]})};t(10);o.a.render(Object(r.jsx)(s.a.StrictMode,{children:Object(r.jsx)(x,{})}),document.getElementById("root"))},9:function(e,n,t){}},[[11,1,2]]]);
//# sourceMappingURL=main.dde4ff08.chunk.js.map