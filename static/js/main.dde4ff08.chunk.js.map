{"version":3,"sources":["components/Header.tsx","components/SearchBar.tsx","components/CategoryBar.tsx","components/UtilCard.tsx","components/UtilsGrid.tsx","components/UtilPage.tsx","components/Footer.tsx","data/utils.ts","App.tsx","index.tsx"],"names":["Header","_jsxs","className","children","_jsx","SearchBar","_ref","value","onChange","type","placeholder","e","target","categories","label","CategoryBar","category","setCategory","map","cat","concat","onClick","UtilCard","util","onSelect","id","icon","title","description","features","f","i","tags","tag","UtilsGrid","utils","search","filtered","filter","matchesCategory","split","includes","searchTerm","toLowerCase","matchesSearch","join","UtilPage","utilId","pageData","onBack","sections","section","idx","heading","code","Footer","utilsData","utilPages","App","setSearch","useState","activeUtil","setActiveUtil","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dde4ff08.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header: React.FC = () => (\n  <div className=\"header\">\n    <h1>üõ†Ô∏è Developer Utils Hub</h1>\n    <p>Your one-stop collection of essential development tools, cheat sheets, and quick references</p>\n  </div>\n);\n\nexport default Header;\n","import React from 'react';\n\ninterface Props {\n  value: string;\n  onChange: (v: string) => void;\n}\n\nconst SearchBar: React.FC<Props> = ({ value, onChange }) => (\n  <div className=\"search-bar\">\n    <input\n      type=\"text\"\n      className=\"search-input\"\n      placeholder=\"Search utilities...\"\n      value={value}\n      onChange={e => onChange(e.target.value)}\n    />\n    <span className=\"search-icon\">üîç</span>\n  </div>\n);\n\nexport default SearchBar;\n","import React from 'react';\n\nconst categories = [\n  { label: 'All', value: 'all' },\n  { label: 'Git', value: 'git' },\n  { label: 'Docker', value: 'docker' },\n  { label: 'Python', value: 'python' },\n  { label: 'JavaScript', value: 'javascript' },\n  { label: 'CSS', value: 'css' },\n  { label: 'Linux', value: 'linux' },\n  { label: 'DevOps', value: 'devops' },\n];\n\ninterface Props {\n  category: string;\n  setCategory: (v: string) => void;\n}\n\nconst CategoryBar: React.FC<Props> = ({ category, setCategory }) => (\n  <div className=\"categories\">\n    {categories.map(cat => (\n      <button\n        key={cat.value}\n        className={`category-btn${category === cat.value ? ' active' : ''}`}\n        onClick={() => setCategory(cat.value)}\n      >\n        {cat.label}\n      </button>\n    ))}\n  </div>\n);\n\nexport default CategoryBar;\n","import React from 'react';\n\ninterface Props {\n  util: any;\n  onSelect: (id: string) => void;\n}\n\nconst UtilCard: React.FC<Props> = ({ util, onSelect }) => (\n  <div\n    className={`util-card ${util.category}`}\n    onClick={() => onSelect(util.id)}\n    data-category={util.category}\n    data-util={util.id}\n  >\n    <div className=\"util-icon\">{util.icon}</div>\n    <h3>{util.title}</h3>\n    <p>{util.description}</p>\n    <ul className=\"util-features\">\n      {util.features.map((f: string, i: number) => (\n        <li key={i}>{f}</li>\n      ))}\n    </ul>\n    <div className=\"util-tags\">\n      {util.tags.map((tag: string, i: number) => (\n        <span className=\"tag\" key={i}>{tag}</span>\n      ))}\n    </div>\n  </div>\n);\n\nexport default UtilCard;\n","import React from 'react';\nimport UtilCard from './UtilCard';\n\ninterface Props {\n  utils: any[];\n  search: string;\n  category: string;\n  onSelect: (id: string) => void;\n}\n\nconst UtilsGrid: React.FC<Props> = ({ utils, search, category, onSelect }) => {\n  const filtered = utils.filter(util => {\n    const matchesCategory =\n      category === 'all' || util.category.split(' ').includes(category);\n    const searchTerm = search.toLowerCase();\n    const matchesSearch =\n      util.title.toLowerCase().includes(searchTerm) ||\n      util.description.toLowerCase().includes(searchTerm) ||\n      util.tags.join(' ').toLowerCase().includes(searchTerm);\n    return matchesCategory && matchesSearch;\n  });\n\n  return (\n    <div className=\"utils-grid\">\n      {filtered.map(util => (\n        <UtilCard key={util.id} util={util} onSelect={onSelect} />\n      ))}\n    </div>\n  );\n};\n\nexport default UtilsGrid;\n","import React from 'react';\n\ninterface Props {\n  utilId: string;\n  pageData: any;\n  onBack: () => void;\n}\n\nconst UtilPage: React.FC<Props> = ({ utilId, pageData, onBack }) => {\n  if (!pageData) return null;\n  return (\n    <div className=\"page-content active\">\n      <button className=\"back-btn\" onClick={onBack}>‚Üê Back to Utils</button>\n      <h1>{pageData.icon} {pageData.title}</h1>\n      {pageData.sections.map((section: any, idx: number) => (\n        <div className=\"command-section\" key={idx}>\n          <h4>{section.heading}</h4>\n          <pre><code>{section.code}</code></pre>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default UtilPage;\n","import React from 'react';\n\nconst Footer: React.FC = () => (\n  <div className=\"footer\">\n    <p>üíª Developer Utils Hub - Your productivity toolkit</p>\n    <p>Built with ‚ù§Ô∏è for developers, by developers</p>\n  </div>\n);\n\nexport default Footer;\n","export const utilsData = [\n  {\n    id: 'git-commands',\n    category: 'git',\n    icon: 'üîÄ',\n    title: 'Git Commands Cheat Sheet',\n    description: 'Complete reference for Git version control commands, from basic to advanced operations.',\n    features: [\n      'Branch management',\n      'Merge & rebase workflows',\n      'Remote operations',\n      'Troubleshooting guide'\n    ],\n    tags: ['Git', 'Version Control', 'CLI']\n  },\n  {\n    id: 'docker-commands',\n    category: 'docker',\n    icon: 'üê≥',\n    title: 'Docker Reference Guide',\n    description: 'Essential Docker commands for containerization, image management, and orchestration.',\n    features: [\n      'Container lifecycle',\n      'Image operations',\n      'Docker Compose',\n      'Networking & volumes'\n    ],\n    tags: ['Docker', 'Containers', 'DevOps']\n  },\n  {\n    id: 'python-snippets',\n    category: 'python',\n    icon: 'üêç',\n    title: 'Python Code Snippets',\n    description: 'Useful Python code snippets, one-liners, and common patterns for everyday development.',\n    features: [\n      'Data structures',\n      'File operations',\n      'List comprehensions',\n      'Error handling'\n    ],\n    tags: ['Python', 'Snippets', 'Quick Reference']\n  },\n  {\n    id: 'js-utilities',\n    category: 'javascript',\n    icon: '‚ö°',\n    title: 'JavaScript Utilities',\n    description: 'Modern JavaScript utility functions, array methods, and ES6+ features reference.',\n    features: [\n      'ES6+ features',\n      'Array methods',\n      'Async/await patterns',\n      'DOM manipulation'\n    ],\n    tags: ['JavaScript', 'ES6+', 'Frontend']\n  },\n  {\n    id: 'css-tricks',\n    category: 'css',\n    icon: 'üé®',\n    title: 'CSS Tricks & Snippets',\n    description: 'CSS tricks, flexbox guides, grid layouts, and modern CSS features for better styling.',\n    features: [\n      'Flexbox & Grid',\n      'Animations',\n      'Responsive design',\n      'Modern CSS features'\n    ],\n    tags: ['CSS', 'Styling', 'Frontend']\n  },\n  {\n    id: 'linux-commands',\n    category: 'linux',\n    icon: 'üêß',\n    title: 'Linux Commands Guide',\n    description: 'Essential Linux/Unix commands for file operations, system administration, and shell scripting.',\n    features: [\n      'File operations',\n      'Process management',\n      'Network commands',\n      'Shell scripting'\n    ],\n    tags: ['Linux', 'Terminal', 'System Admin']\n  },\n  {\n    id: 'regex-patterns',\n    category: 'javascript python',\n    icon: 'üîç',\n    title: 'Regex Patterns Library',\n    description: 'Common regular expression patterns for validation, parsing, and text manipulation.',\n    features: [\n      'Email validation',\n      'Phone numbers',\n      'URL patterns',\n      'Text extraction'\n    ],\n    tags: ['Regex', 'Validation', 'Text Processing']\n  },\n  {\n    id: 'sql-queries',\n    category: 'devops',\n    icon: 'üóÉÔ∏è',\n    title: 'SQL Query Reference',\n    description: 'Common SQL queries, database operations, and optimization techniques for developers.',\n    features: [\n      'CRUD operations',\n      'Joins & subqueries',\n      'Performance tips',\n      'Database design'\n    ],\n    tags: ['SQL', 'Database', 'Queries']\n  },\n  {\n    id: 'api-testing',\n    category: 'javascript python',\n    icon: 'üîå',\n    title: 'API Testing Tools',\n    description: 'Tools and techniques for API testing, debugging, and documentation with various methods.',\n    features: [\n      'HTTP methods',\n      'Status codes',\n      'Authentication',\n      'Testing tools'\n    ],\n    tags: ['API', 'Testing', 'HTTP']\n  },\n  {\n    id: 'kubernetes-guide',\n    category: 'devops',\n    icon: '‚ò∏Ô∏è',\n    title: 'Kubernetes Quick Guide',\n    description: 'Kubernetes commands, YAML configurations, and cluster management essentials.',\n    features: [\n      'kubectl commands',\n      'Pod management',\n      'Services & ingress',\n      'YAML configs'\n    ],\n    tags: ['Kubernetes', 'DevOps', 'Orchestration']\n  },\n  {\n    id: 'vscode-shortcuts',\n    category: 'all',\n    icon: '‚å®Ô∏è',\n    title: 'VS Code Shortcuts',\n    description: 'Essential Visual Studio Code keyboard shortcuts and productivity tips for faster development.',\n    features: [\n      'Navigation shortcuts',\n      'Editing commands',\n      'Multi-cursor tricks',\n      'Extension tips'\n    ],\n    tags: ['VS Code', 'Shortcuts', 'Productivity']\n  },\n  {\n    id: 'react-hooks',\n    category: 'javascript',\n    icon: '‚öõÔ∏è',\n    title: 'React Hooks Guide',\n    description: 'Complete guide to React Hooks with examples, patterns, and best practices.',\n    features: [\n      'Built-in hooks',\n      'Custom hooks',\n      'Performance tips',\n      'Common patterns'\n    ],\n    tags: ['React', 'Hooks', 'Frontend']\n  }\n];\n\nexport const utilPages: Record<string, any> = {\n  'git-commands': {\n    icon: 'üîÄ',\n    title: 'Git Commands Cheat Sheet',\n    sections: [\n      {\n        heading: 'Basic Git Commands',\n        code: `# Initialize repository\\ngit init\\n\\n# Clone repository\\ngit clone <repository-url>\\n\\n# Check status\\ngit status\\n\\n# Add files\\ngit add .\\ngit add <filename>\\n\\n# Commit changes\\ngit commit -m \"commit message\"\\n\\n# Push to remote\\ngit push origin main`\n      },\n      {\n        heading: 'Branch Management',\n        code: `# Create and switch to new branch\\ngit checkout -b <branch-name>\\n\\n# Switch branches\\ngit checkout <branch-name>\\ngit switch <branch-name>\\n\\n# List branches\\ngit branch\\ngit branch -a  # include remote branches\\n\\n# Delete branch\\ngit branch -d <branch-name>\\ngit branch -D <branch-name>  # force delete\\n\\n# Rename branch\\ngit branch -m <new-name>`\n      },\n      {\n        heading: 'Remote Operations',\n        code: `# Add remote\\ngit remote add origin <url>\\n\\n# View remotes\\ngit remote -v\\n\\n# Fetch from remote\\ngit fetch origin\\n\\n# Pull changes\\ngit pull origin main\\n\\n# Push branch\\ngit push -u origin <branch-name>`\n      },\n      {\n        heading: 'Merge & Rebase',\n        code: `# Merge branch\\ngit merge <branch-name>\\n\\n# Rebase\\ngit rebase <branch-name>\\n\\n# Interactive rebase\\ngit rebase -i HEAD~3\\n\\n# Abort merge/rebase\\ngit merge --abort\\ngit rebase --abort`\n      },\n      {\n        heading: 'Undo Operations',\n        code: `# Unstage files\\ngit reset HEAD <file>\\n\\n# Undo last commit (keep changes)\\ngit reset --soft HEAD~1\\n\\n# Undo last commit (discard changes)\\ngit reset --hard HEAD~1\\n\\n# Revert commit\\ngit revert <commit-hash>\\n\\n# Stash changes\\ngit stash\\ngit stash pop`\n      }\n    ]\n  },\n  'docker-commands': {\n    icon: 'üê≥',\n    title: 'Docker Reference Guide',\n    sections: [\n      {\n        heading: 'Container Operations',\n        code: `# Run container\\ndocker run -it ubuntu bash\\ndocker run -d -p 8080:80 nginx\\n\\n# List containers\\ndocker ps\\ndocker ps -a  # include stopped\\n\\n# Stop/Start container\\ndocker stop <container-id>\\ndocker start <container-id>\\n\\n# Remove container\\ndocker rm <container-id>\\ndocker rm $(docker ps -aq)  # remove all`\n      },\n      {\n        heading: 'Image Management',\n        code: `# List images\\ndocker images\\n\\n# Pull image\\ndocker pull ubuntu:20.04\\n\\n# Build image\\ndocker build -t myapp .\\n\\n# Remove image\\ndocker rmi <image-id>\\n\\n# Tag image\\ndocker tag myapp:latest myapp:v1.0`\n      },\n      {\n        heading: 'Docker Compose',\n        code: `# Start services\\ndocker-compose up\\ndocker-compose up -d\\n\\n# Stop services\\ndocker-compose down\\n\\n# View logs\\ndocker-compose logs\\ndocker-compose logs -f\\n\\n# Build services\\ndocker-compose build\\n\\n# Scale services\\ndocker-compose up --scale web=3`\n      },\n      {\n        heading: 'Volumes & Networks',\n        code: `# Create volume\\ndocker volume create myvolume\\n\\n# List volumes\\ndocker volume ls\\n\\n# Create network\\ndocker network create mynetwork\\n\\n# List networks\\ndocker network ls\\n\\n# Run with volume\\ndocker run -v myvolume:/data myapp`\n      }\n    ]\n  },\n  'python-snippets': {\n    icon: 'üêç',\n    title: 'Python Code Snippets',\n    sections: [\n      {\n        heading: 'List Operations',\n        code: `# List comprehensions\\nsquares = [x**2 for x in range(10)]\\nevans = [x for x in range(20) if x % 2 == 0]\\n\\n# Flatten nested lists\\nnested = [[1, 2], [3, 4], [5, 6]]\\nflattened = [item for sublist in nested for item in sublist]\\n\\n# Remove duplicates (preserve order)\\ndef remove_duplicates(lst):\\n    return list(dict.fromkeys(lst))\\n\\n# Find common elements\\nlist1 = [1, 2, 3, 4]\\nlist2 = [3, 4, 5, 6]\\ncommon = list(set(list1) & set(list2))`\n      },\n      {\n        heading: 'Dictionary Operations',\n        code: `# Dictionary comprehension\\nsquares_dict = {x: x**2 for x in range(5)}\\n\\n# Merge dictionaries (Python 3.9+)\\ndict1 = {'a': 1, 'b': 2}\\ndict2 = {'c': 3, 'd': 4}\\nmerged = dict1 | dict2\\n\\n# Get value with default\\nvalue = my_dict.get('key', 'default_value')\\n\\n# Invert dictionary\\ninverted = {v: k for k, v in original_dict.items()}\\n\\n# Sort dictionary by value\\nsorted_dict = dict(sorted(my_dict.items(), key=lambda x: x[1]))`\n      },\n      {\n        heading: 'File Operations',\n        code: `# Read file content\\nwith open('file.txt', 'r') as f:\\n    content = f.read()\\n\\n# Read lines into list\\nwith open('file.txt', 'r') as f:\\n    lines = f.readlines()\\n\\n# Write to file\\nwith open('output.txt', 'w') as f:\\n    f.write('Hello World\\\\n')\\n\\n# JSON operations\\nimport json\\n\\n# Read JSON\\nwith open('data.json', 'r') as f:\\n    data = json.load(f)\\n\\n# Write JSON\\nwith open('data.json', 'w') as f:\\n    json.dump(data, f, indent=2)`\n      },\n      {\n        heading: 'String Operations',\n        code: `# String formatting\\nname = \"John\"\\nage = 30\\nformatted = f\"Name: {name}, Age: {age}\"\\n\\n# Split and join\\nwords = text.split(' ')\\njoined = '-'.join(words)\\n\\n# Remove whitespace\\ncleaned = text.strip()\\n\\n# Replace text\\nnew_text = text.replace('old', 'new')\\n\\n# Check string properties\\ntext.isdigit()   # all digits\\ntext.isalpha()   # all letters\\ntext.startswith('prefix')\\ntext.endswith('suffix')`\n      }\n    ]\n  },\n  'js-utilities': {\n    icon: '‚ö°',\n    title: 'JavaScript Utilities',\n    sections: [\n      {\n        heading: 'Array Methods',\n        code: `// Map, filter, reduce\\nconst numbers = [1, 2, 3, 4, 5];\\nconst doubled = numbers.map(n => n * 2);\\nconst evens = numbers.filter(n => n % 2 === 0);\\nconst sum = numbers.reduce((acc, n) => acc + n, 0);\\n\\n// Find and some/every\\nconst found = numbers.find(n => n > 3);\\nconst hasEven = numbers.some(n => n % 2 === 0);\\nconst allPositive = numbers.every(n => n > 0);\\n\\n// Flatten arrays\\nconst nested = [[1, 2], [3, 4], [5]];\\nconst flat = nested.flat();\\nconst deepFlat = nested.flat(2); // depth 2`\n      },\n      {\n        heading: 'ES6+ Features',\n        code: `// Destructuring\\nconst [a, b, ...rest] = [1, 2, 3, 4, 5];\\nconst {name, age, ...others} = person;\\n\\n// Spread operator\\nconst newArray = [...oldArray, newItem];\\nconst newObj = {...oldObj, newProp: 'value'};\\n\\n// Template literals\\nconst message = ` + \"`Hello ${name}, you are ${age} years old`\" + `;\\n\\n// Arrow functions\\nconst add = (a, b) => a + b;\\nconst square = x => x * x;\\n\\n// Default parameters\\nconst greet = (name = 'World') => ` + \"`Hello ${name}!`\" + `;`\n      },\n      {\n        heading: 'Async/Await',\n        code: `// Promise creation\\nconst fetchData = () => {\\n    return new Promise((resolve, reject) => {\\n        setTimeout(() => resolve('Data'), 1000);\\n    });\\n};\\n\\n// Async/await\\nasync function getData() {\\n    try {\\n        const data = await fetchData();\\n        return data;\\n    } catch (error) {\\n        console.error('Error:', error);\\n    }\\n}\\n\\n// Promise.all for parallel requests\\nconst results = await Promise.all([\\n    fetch('/api/users'),\\n    fetch('/api/posts'),\\n    fetch('/api/comments')\\n]);\\n\\n// Promise.allSettled for error handling\\nconst outcomes = await Promise.allSettled([\\n    fetchUser(),\\n    fetchPosts(),\\n    fetchComments()\\n]);`\n      }\n    ]\n  },\n  'css-tricks': {\n    icon: 'üé®',\n    title: 'CSS Tricks & Snippets',\n    sections: [\n      {\n        heading: 'Flexbox Layouts',\n        code: `/* Center content */\\n.center {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    min-height: 100vh;\\n}\\n\\n/* Responsive grid */\\n.grid {\\n    display: flex;\\n    flex-wrap: wrap;\\n    gap: 1rem;\\n}\\n\\n.grid-item {\\n    flex: 1 1 300px; /* grow shrink basis */\\n}\\n\\n/* Space between items */\\n.navbar {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n}\\n\\n/* Equal height columns */\\n.columns {\\n    display: flex;\\n    align-items: stretch;\\n}`\n      },\n      {\n        heading: 'CSS Grid',\n        code: `/* Basic grid */\\n.grid-container {\\n    display: grid;\\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\\n    gap: 1rem;\\n}\\n\\n/* Named grid lines */\\n.layout {\\n    display: grid;\\n    grid-template-columns: [sidebar] 250px [main] 1fr;\\n    grid-template-rows: [header] 60px [content] 1fr [footer] 40px;\\n}\\n\\n/* Grid areas */\\n.page-layout {\\n    display: grid;\\n    grid-template-areas:\\n        \"header header header\"\\n        \"sidebar main main\"\\n        \"footer footer footer\";\\n}\\n\\n.header { grid-area: header; }\\n.sidebar { grid-area: sidebar; }\\n.main { grid-area: main; }\\n.footer { grid-area: footer; }`\n      },\n      {\n        heading: 'Modern CSS Features',\n        code: `/* CSS Custom Properties */\\n:root {\\n    --primary-color: #007bff;\\n    --secondary-color: #6c757d;\\n    --font-size: 16px;\\n}\\n\\n.button {\\n    background: var(--primary-color);\\n    font-size: var(--font-size);\\n}\\n\\n/* CSS Logical Properties */\\n.card {\\n    margin-inline: 1rem; /* left/right in LTR */\\n    padding-block: 1rem; /* top/bottom */\\n    border-inline-start: 3px solid blue; /* left in LTR */\\n}\\n\\n/* Container Queries */\\n@container (min-width: 400px) {\\n    .card {\\n        display: grid;\\n        grid-template-columns: 1fr 2fr;\\n    }\\n}\\n\\n/* Modern color functions */\\n.element {\\n    background: hsl(200 50% 50%);\\n    color: oklch(60% 0.15 200);\\n}`\n      }\n    ]\n  },\n  'linux-commands': {\n    icon: 'üêß',\n    title: 'üêß Linux Commands Guide',\n    sections: [\n      {\n        heading: 'File Operations',\n        code: `# List files\\nls -la          # detailed list with hidden files\\nls -lh          # human readable sizes\\nls -lt          # sort by modification time\\n\\n# Copy and move\\ncp file.txt backup.txt\\ncp -r dir1 dir2         # recursive copy\\nmv oldname.txt newname.txt\\nmv file.txt /path/to/destination/\\n\\n# Find files\\nfind . -name \"*.txt\"\\nfind . -type f -size +100M  # files larger than 100MB\\nfind . -mtime -7            # modified in last 7 days\\n\\n# File permissions\\nchmod 755 script.sh         # rwxr-xr-x\\nchmod +x script.sh          # make executable\\nchown user:group file.txt   # change ownership`\n      },\n      {\n        heading: 'Process Management',\n        code: `# View processes\\nps aux                      # all processes\\nps aux | grep nginx        # filter processes\\ntop                        # real-time process monitor\\nhtop                       # enhanced process monitor\\n\\n# Kill processes\\nkill PID                   # terminate process\\nkill -9 PID               # force kill\\nkillall nginx             # kill by name\\npkill -f \"python script\"  # kill by pattern\\n\\n# Background jobs\\ncommand &                 # run in background\\njobs                      # list background jobs\\nfg %1                     # bring job 1 to foreground\\nbg %1                     # send job 1 to background\\nnohup command &           # run immune to hangups`\n      },\n      {\n        heading: 'Network Commands',\n        code: `# Network info\\nip addr show              # show IP addresses\\nip route show             # show routing table\\nnetstat -tuln            # listening ports\\nss -tuln                 # modern netstat alternative\\n\\n# Test connectivity\\nping google.com          # test connectivity\\ntraceroute google.com    # trace network path\\nnslookup google.com      # DNS lookup\\ndig google.com           # detailed DNS info\\n\\n# Download files\\nwget https://example.com/file.zip\\ncurl -O https://example.com/file.zip\\ncurl -L -o file.zip https://short.url\\nrsync -avz source/ dest/ # sync files`\n      },\n      {\n        heading: 'Text Processing',\n        code: `# View file content\\ncat file.txt             # display entire file\\nless file.txt            # paginated view\\nhead -n 20 file.txt      # first 20 lines\\ntail -f /var/log/app.log # follow log file\\n\\n# Search and filter\\ngrep \"pattern\" file.txt\\ngrep -r \"pattern\" .      # recursive search\\ngrep -i \"pattern\" file   # case insensitive\\ngrep -v \"pattern\" file   # invert match\\n\\n# Text manipulation\\nsed 's/old/new/g' file.txt        # replace text\\nawk '{print $1}' file.txt         # print first column\\nsort file.txt                     # sort lines\\nuniq file.txt                     # remove duplicates\\nwc -l file.txt                    # count lines`\n      }\n    ]\n  }\n};\n","import React, { useState } from 'react';\nimport Header from './components/Header';\nimport SearchBar from './components/SearchBar';\nimport CategoryBar from './components/CategoryBar';\nimport UtilsGrid from './components/UtilsGrid';\nimport UtilPage from './components/UtilPage';\nimport Footer from './components/Footer';\nimport { utilsData, utilPages } from './data/utils';\nimport './styles/main.css';\n\nconst App: React.FC = () => {\n  const [search, setSearch] = useState<string>('');\n  const [category, setCategory] = useState<string>('all');\n  const [activeUtil, setActiveUtil] = useState<string | null>(null);\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <SearchBar value={search} onChange={setSearch} />\n      <CategoryBar category={category} setCategory={setCategory} />\n\n      {!activeUtil ? (\n        <UtilsGrid\n          utils={utilsData}\n          search={search}\n          category={category}\n          onSelect={setActiveUtil}\n        />\n      ) : (\n        <UtilPage utilId={activeUtil} pageData={utilPages[activeUtil]} onBack={() => setActiveUtil(null)} />\n      )}\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}